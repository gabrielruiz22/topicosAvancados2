// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjBibliotecaP1.Data;

namespace ProjBibliotecaP1.Migrations
{
    [DbContext(typeof(ProjBibliotecaP1Context))]
    partial class ProjBibliotecaP1ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjBibliotecaP1.Models.Autor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomeAutor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("cidadeId")
                        .HasColumnType("int");

                    b.Property<int>("quantidadeLivrosPublicados")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("cidadeId");

                    b.ToTable("Autor");
                });

            modelBuilder.Entity("ProjBibliotecaP1.Models.Biblioteca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LivroId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LivroId");

                    b.ToTable("Biblioteca");
                });

            modelBuilder.Entity("ProjBibliotecaP1.Models.Cidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cidade");
                });

            modelBuilder.Entity("ProjBibliotecaP1.Models.Livro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Disponivel")
                        .HasColumnType("bit");

                    b.Property<string>("NomeDoLivro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("autorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("autorId");

                    b.ToTable("Livro");
                });

            modelBuilder.Entity("ProjBibliotecaP1.Models.Autor", b =>
                {
                    b.HasOne("ProjBibliotecaP1.Models.Cidade", "cidade")
                        .WithMany()
                        .HasForeignKey("cidadeId");

                    b.Navigation("cidade");
                });

            modelBuilder.Entity("ProjBibliotecaP1.Models.Biblioteca", b =>
                {
                    b.HasOne("ProjBibliotecaP1.Models.Livro", "Livro")
                        .WithMany()
                        .HasForeignKey("LivroId");

                    b.Navigation("Livro");
                });

            modelBuilder.Entity("ProjBibliotecaP1.Models.Livro", b =>
                {
                    b.HasOne("ProjBibliotecaP1.Models.Autor", "autor")
                        .WithMany()
                        .HasForeignKey("autorId");

                    b.Navigation("autor");
                });
#pragma warning restore 612, 618
        }
    }
}
